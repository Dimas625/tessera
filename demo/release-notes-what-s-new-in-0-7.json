{
  "id": 9,
  "title": "What's new in 0.7?",
  "category": "Release Notes",
  "description": null,
  "summary": "",
  "imported_from": null,
  "definition_href": "/api/dashboard/9/definition",
  "view_href": "/dashboards/9/what-s-new-in-0-7",
  "href": "/api/dashboard/9",
  "tags": [
    {
      "id": 4,
      "name": "release-notes",
      "count": 6
    }
  ],
  "definition": {
    "item_type": "dashboard_definition",
    "item_id": "d3",
    "href": "/api/dashboard/9/definition",
    "options": {
      "from": "-3h"
    },
    "items": [
      {
        "item_type": "section",
        "item_id": "d14",
        "horizontal_rule": true,
        "level": "2",
        "items": [
          {
            "item_type": "row",
            "item_id": "d15",
            "items": [
              {
                "item_type": "cell",
                "item_id": "d16",
                "items": [],
                "span": 3,
                "offset": "1"
              },
              {
                "item_type": "cell",
                "item_id": "d17",
                "items": [
                  {
                    "item_type": "markdown",
                    "item_id": "d23",
                    "text": "This release doesn't have as many flashy new features as the previous release, 0.6, but internally it's an even bigger release. The client side code has been cleaned up and refactored, which provides a much better base for tackling some of the [major features](https://github.com/urbanairship/tessera/labels/major-feature) in future releases. "
                  }
                ],
                "span": 7
              }
            ]
          },
          {
            "item_type": "row",
            "item_id": "d25",
            "items": [
              {
                "item_type": "cell",
                "item_id": "d26",
                "items": [
                  {
                    "item_type": "markdown",
                    "item_id": "d27",
                    "text": "### TypeScript"
                  }
                ],
                "span": 3,
                "offset": "1"
              },
              {
                "item_type": "cell",
                "item_id": "d28",
                "items": [
                  {
                    "item_type": "markdown",
                    "item_id": "d29",
                    "text": "The big news is that the client-side JavaScript code has been\nre-written in Microsoft's\n[TypeScript](http://www.typescriptlang.org/). TypeScript is a\nsuperset of the ECMAScript 6 specification with optional type\nannotations, which compiles down to JavaScript.\n\nAs part of the refactoring, the homegrown object model library\nhas been replaced with standard JavaScript classes, using\nECMAScript 6's `class` syntax. This makes the hierarchy of\ndashboard items much easier to extend.\n\nAlong with the re-write, the build workflow has been updated to\nuse Browserify and Babel.js, with more components being loaded\nfrom [npm](https://www.npmjs.com/) rather than being checked in\nto the project."
                  }
                ],
                "span": 7
              }
            ]
          }
        ],
        "layout": "fixed",
        "title": "Internal Rewrite"
      },
      {
        "item_type": "section",
        "item_id": "d36",
        "horizontal_rule": true,
        "level": "2",
        "items": [
          {
            "item_type": "row",
            "item_id": "d37",
            "items": [
              {
                "item_type": "cell",
                "item_id": "d38",
                "items": [
                  {
                    "item_type": "markdown",
                    "item_id": "d43",
                    "text": "### Editor Improvements\n"
                  }
                ],
                "span": 3,
                "offset": 1
              },
              {
                "item_type": "cell",
                "item_id": "d42",
                "items": [
                  {
                    "item_type": "markdown",
                    "item_id": "d44",
                    "text": "Property editing has generally been tightened up in small ways. Boolean values are rendered with a `select` dropdown, and will reliably show the current value. Constrained numeric fields related to the grid, such as cell `span` and `offset` are also rendered with a select now, so it's impossible to enter invalid values. "
                  }
                ],
                "span": 7
              }
            ]
          },
          {
            "item_type": "row",
            "item_id": "d45",
            "items": [
              {
                "item_type": "cell",
                "item_id": "d46",
                "items": [
                  {
                    "item_type": "markdown",
                    "item_id": "d47",
                    "text": "### Navigation & Bugfixes"
                  }
                ],
                "span": 3,
                "offset": 1
              },
              {
                "item_type": "cell",
                "item_id": "d48",
                "items": [
                  {
                    "item_type": "markdown",
                    "item_id": "d49",
                    "text": "* Dashboards can now be marked as favorites, and accessed from\n  the [favorites](/favorites) page. Look for the <i class=\"fa\n  fa-star-o\"></i> star icon in dashboard lists and the dashboard\n  toolbar. They're stored in your browser's `localStorage`.\n* Don't display tags with zero dashboards in the tag list.\n* Don't allow saving dashboards when a transform has been applied.\n* A UI for import and export of dashboards from local JSON files.\n* HandlebarsJS engine upgraded to version 3.0.\n* See the [full list of closed issues](https://github.com/urbanairship/tessera/issues?q=milestone%3A%22Release+0.7%22+is%3Aclosed)"
                  }
                ],
                "span": 7
              }
            ]
          }
        ],
        "layout": "fixed",
        "title": "Miscellany"
      },
      {
        "item_type": "section",
        "item_id": "d4",
        "horizontal_rule": true,
        "level": "2",
        "items": [
          {
            "item_type": "row",
            "item_id": "d5",
            "style": "none",
            "items": [
              {
                "item_type": "cell",
                "item_id": "d6",
                "items": [
                  {
                    "item_type": "markdown",
                    "item_id": "d8",
                    "text": "### Timer Stats\n\nA timer stat presentation is very similar to a singlestat, but shows one of the summation values translated to a human-readable time span. "
                  }
                ],
                "span": 3,
                "offset": "1"
              },
              {
                "item_type": "cell",
                "item_id": "d7",
                "items": [
                  {
                    "item_type": "timerstat",
                    "item_id": "d9",
                    "language": "minimal",
                    "precision": 2,
                    "query": "duration",
                    "scale": 100,
                    "title": "Short",
                    "transform": "sum"
                  }
                ],
                "span": 2
              },
              {
                "item_type": "cell",
                "item_id": "d10",
                "items": [
                  {
                    "item_type": "timerstat",
                    "item_id": "d11",
                    "language": "compact",
                    "precision": 2,
                    "query": "duration",
                    "scale": 37067,
                    "title": "Longer",
                    "transform": "sum"
                  }
                ],
                "span": 2
              },
              {
                "item_type": "cell",
                "item_id": "d12",
                "items": [
                  {
                    "item_type": "timerstat",
                    "item_id": "d13",
                    "precision": 3,
                    "query": "duration",
                    "scale": 3730167,
                    "title": "Even Longer",
                    "transform": "sum"
                  }
                ],
                "span": 4
              }
            ]
          },
          {
            "item_type": "row",
            "item_id": "d91",
            "style": "none",
            "items": [
              {
                "item_type": "cell",
                "item_id": "d94",
                "items": [
                  {
                    "item_type": "separator",
                    "item_id": "d100"
                  }
                ],
                "span": 9,
                "offset": 3
              }
            ]
          },
          {
            "item_type": "row",
            "item_id": "d50",
            "style": "none",
            "items": [
              {
                "item_type": "cell",
                "item_id": "d51",
                "items": [
                  {
                    "item_type": "markdown",
                    "item_id": "d52",
                    "text": "### Timeshift Single Stats\n\nLike timeshift summation tables, this presentation takes the\nquery and compares it to the same query shifted back in time. The\ndelta can be displayed as a raw value or a percentage.\n"
                  }
                ],
                "span": 3,
                "offset": "1"
              },
              {
                "item_type": "cell",
                "item_id": "d53",
                "items": [
                  {
                    "item_type": "timeshift_singlestat",
                    "item_id": "d59",
                    "format": ",.3s",
                    "percent": false,
                    "query": "collector",
                    "shift": "1d",
                    "title": "shift 1 day, value",
                    "transform": "mean"
                  }
                ],
                "span": 2
              },
              {
                "item_type": "cell",
                "item_id": "d60",
                "items": [
                  {
                    "item_type": "timeshift_singlestat",
                    "item_id": "d61",
                    "format": ",.3s",
                    "percent": true,
                    "query": "collector",
                    "shift": "1d",
                    "title": "shift 1 day, %",
                    "transform": "mean"
                  }
                ],
                "span": 2
              },
              {
                "item_type": "cell",
                "item_id": "d62",
                "items": [
                  {
                    "item_type": "timeshift_singlestat",
                    "item_id": "d63",
                    "format": ",.3s",
                    "percent": true,
                    "query": "collector",
                    "shift": "1w",
                    "title": "shift 1 week, %",
                    "transform": "mean"
                  }
                ],
                "span": 2
              }
            ]
          },
          {
            "item_type": "row",
            "item_id": "d79",
            "style": "none",
            "items": [
              {
                "item_type": "cell",
                "item_id": "d80",
                "items": [],
                "span": 3,
                "offset": "1"
              },
              {
                "item_type": "cell",
                "item_id": "d82",
                "items": [
                  {
                    "item_type": "timeshift_jumbotron_singlestat",
                    "item_id": "d88",
                    "format": ",.3s",
                    "percent": false,
                    "query": "collector",
                    "shift": "1d",
                    "title": "timeshifted jumbotron",
                    "transform": "mean"
                  }
                ],
                "span": 4
              }
            ]
          },
          {
            "item_type": "row",
            "item_id": "d101",
            "style": "none",
            "items": [
              {
                "item_type": "cell",
                "item_id": "d102",
                "items": [
                  {
                    "item_type": "separator",
                    "item_id": "d103"
                  }
                ],
                "span": 9,
                "offset": 3
              }
            ]
          },
          {
            "item_type": "row",
            "item_id": "d68",
            "style": "none",
            "items": [
              {
                "item_type": "cell",
                "item_id": "d69",
                "items": [
                  {
                    "item_type": "markdown",
                    "item_id": "d70",
                    "text": "### Comparison Singlestats\n\nJust like timeshift singlestats, just comparing two arbitrary queries. "
                  }
                ],
                "span": 3,
                "offset": "1"
              },
              {
                "item_type": "cell",
                "item_id": "d71",
                "items": [
                  {
                    "item_type": "comparison_singlestat",
                    "item_id": "d72",
                    "format": ",.3s",
                    "percent": true,
                    "query": "a",
                    "query_other": "b",
                    "title": "A vs B (max, %)",
                    "transform": "max",
                    "units": "things"
                  }
                ],
                "span": 2
              },
              {
                "item_type": "cell",
                "item_id": "d89",
                "items": [
                  {
                    "item_type": "comparison_singlestat",
                    "item_id": "d90",
                    "format": ",.3s",
                    "percent": false,
                    "query": "a",
                    "query_other": "b",
                    "title": "A vs B (median)",
                    "transform": "median",
                    "units": "things"
                  }
                ],
                "span": 2
              }
            ]
          },
          {
            "item_type": "row",
            "item_id": "d73",
            "style": "none",
            "items": [
              {
                "item_type": "cell",
                "item_id": "d74",
                "items": [],
                "span": 3,
                "offset": "1"
              },
              {
                "item_type": "cell",
                "item_id": "d76",
                "items": [
                  {
                    "item_type": "comparison_jumbotron_singlestat",
                    "item_id": "d78",
                    "format": ",.3s",
                    "percent": true,
                    "query": "a",
                    "query_other": "b",
                    "title": "comparison jumbotron",
                    "transform": "mean"
                  }
                ],
                "span": 5
              }
            ]
          },
          {
            "item_type": "row",
            "item_id": "d107",
            "style": "none",
            "items": [
              {
                "item_type": "cell",
                "item_id": "d108",
                "items": [
                  {
                    "item_type": "separator",
                    "item_id": "d109"
                  }
                ],
                "span": 9,
                "offset": 3
              }
            ]
          },
          {
            "item_type": "row",
            "item_id": "d30",
            "items": [
              {
                "item_type": "cell",
                "item_id": "d31",
                "items": [
                  {
                    "item_type": "markdown",
                    "item_id": "d32",
                    "text": "### Override Chart Renderer\n\nThe chart renderer can now be set on a per-chart basis,\noverriding the default.\n\nNow if there\u2019s something you need to do with a graphite query\nthat flot charts don\u2019t support, you can selectively use\ngraphite\u2019s PNG renderer.\n"
                  }
                ],
                "span": 3,
                "offset": "1"
              },
              {
                "item_type": "cell",
                "item_id": "d33",
                "items": [
                  {
                    "item_type": "stacked_area_chart",
                    "item_id": "d39",
                    "hide_zero_series": false,
                    "legend": "simple",
                    "renderer": "flot",
                    "stack_mode": "stack",
                    "query": "group",
                    "title": "Flot Renderer",
                    "options": {
                      "palette": "d3category20"
                    },
                    "interactive": true
                  }
                ],
                "span": "4"
              },
              {
                "item_type": "cell",
                "item_id": "d40",
                "items": [
                  {
                    "item_type": "stacked_area_chart",
                    "item_id": "d41",
                    "height": 2,
                    "hide_zero_series": false,
                    "legend": "simple",
                    "renderer": "graphite",
                    "stack_mode": "stack",
                    "query": "group",
                    "title": "Graphite Renderer",
                    "options": {
                      "palette": "d3category20"
                    },
                    "interactive": true
                  }
                ],
                "span": "4"
              }
            ]
          }
        ],
        "layout": "fixed",
        "title": "Dashboard Enhancements"
      }
    ],
    "queries": {
      "a": {
        "name": "a",
        "targets": [
          "randomWalkFunction(\"query3\")"
        ]
      },
      "b": {
        "name": "b",
        "targets": [
          "randomWalkFunction(\"query4\")"
        ]
      },
      "collector": {
        "name": "collector",
        "targets": [
          "collector_time_ms"
        ]
      },
      "duration": {
        "name": "duration",
        "targets": [
          "absolute(randomWalkFunction(\"query0\"))"
        ]
      },
      "group": {
        "name": "group",
        "targets": [
          "group(absolute(randomWalkFunction(\"series1\")), absolute(randomWalkFunction(\"series2\")), absolute(randomWalkFunction(\"series3\")))"
        ]
      }
    }
  }
}